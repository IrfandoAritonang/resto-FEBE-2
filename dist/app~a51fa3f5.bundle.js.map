{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";qbACA,ypNAMA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAE/D,IAAMG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,WAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAGF,IAAMC,EAAgB,CACdC,cAAa,WAACC,GAAI,wGACjBA,EAAI,CAAF,gEAGOR,EAAS,uCAAES,IAAIV,EAAmBS,IAAE,2CAJ5B,EAKxB,EAEME,iBAAgB,aAAG,qHACTV,EAAS,uCAAEW,OAAOZ,IAAiB,2CAD1B,EAEzB,EAEMa,iBAAgB,WAACJ,GAAI,qHACXR,EAAS,iDAASD,EAAmBS,IAAE,2CAD5B,EAE3B,EAEMK,cAAa,WAACC,GAAO,wGACpBA,EAAMC,eAAe,MAAO,CAAF,gEAGjBf,EAAS,uCAAEgB,IAAIjB,EAAmBe,IAAK,2CAJ5B,EAK3B,GAIF,uDCtCA,IAAMG,EAAe,CACnBC,KAAM,GAAF,OAAKrB,EAAAA,EAAAA,SAAe,QACxBsB,OAAQ,WAACX,GAAE,gBAAQX,EAAAA,EAAAA,SAAe,kBAAUW,EAAE,GAGhD,oSCNA,yhOADmD,IAE7CY,EAAgB,gGACpB,0GACyBC,MAAMJ,EAAAA,MAAkB,OAAzCK,EAAW,EAAH,qBACaA,EAASC,OAAM,OAApCC,EAAe,EAAH,8BACXA,EAAaC,aAAW,4CAChC,qDALmB,IAKnB,sDAED,WAAyBjB,GAAE,2FACFa,MAAMJ,EAAAA,OAAoBT,IAAI,OAA/Cc,EAAW,EAAH,8BACPA,EAASC,QAAM,4CAGvB,sDAPA,MAOA,SAZmB,GAetB,uLChBA,IAAM1B,GAAM,GACV6B,IAAK,eACLC,SAAU,uCACVC,eAAgB,qDAChBC,iBAAkB,QAClBC,WAAY,cACZlC,cAAe,qBACfE,iBAAkB,EAClBC,kBAAmB,cAAY,kBACnB,IAAIgC,MAAOC,eAAa,4BACb,8BAA4B,4BAC5B,8BAA4B,GAGrD,0JCNA,IAAMC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,kBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://resto-febe-2/./src/scripts/data/favorite-resto-idb.js","webpack://resto-febe-2/./src/scripts/globals/api-endpoint.js","webpack://resto-febe-2/./src/scripts/data/restodb-source.js","webpack://resto-febe-2/./src/scripts/globals/config.js","webpack://resto-febe-2/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-empty-function */\n/* eslint-disable no-prototype-builtins */\n/* eslint-disable consistent-return */\nimport { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst RestoFavorite = {\n  async getRestaurant(id) {\n    if (!id) {\n      return;\n    }\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n\n  async getAllRestaurant() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n\n  async deleteRestaurant(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n\n  async putRestaurant(resto) {\n    if (!resto.hasOwnProperty('id')) {\n      return;\n    }\n    return (await dbPromise).put(OBJECT_STORE_NAME, resto);\n  },\n\n};\n\nexport default RestoFavorite;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  HOME: `${CONFIG.BASE_URL}list`,\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/api-endpoint';\n\nclass TheRestoDbSource {\n  static async homeResto() {\n    const response = await fetch(API_ENDPOINT.HOME);\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async detailResto(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    return response.json();\n    // const responseJson = await response.json();\n    // return responseJson.restaurant;\n  }\n}\n\nexport default TheRestoDbSource;\n","/* eslint-disable no-dupe-keys */\nconst CONFIG = {\n  KEY: 'YOUR_API_KEY',\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\n  DEFAULT_LANGUAGE: 'en-us',\n  CACHE_NAME: 'Restoran-V1',\n  DATABASE_NAME: 'restoinaj-database',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'restaurant',\n  CACHE_NAME: new Date().toISOString(),\n  IMAGE_HERO_LARGE_PATH: './heros/hero-image_4-large',\n  IMAGE_HERO_SMALL_PATH: './heros/hero-image_4-small',\n};\n\nexport default CONFIG;\n","/* eslint-disable linebreak-style */\r\nimport 'regenerator-runtime';\r\nimport '../styles/style.css';\r\nimport '../styles/responsive.css';\r\nimport App from './views/app';\r\nimport swRegister from './utlis/sw-register';\r\nimport 'lazysizes';\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\r\n\r\nconst app = new App({\r\n  button: document.querySelector('#hamburgerButton'),\r\n  drawer: document.querySelector('#navigationDrawer'),\r\n  content: document.querySelector('#mainContent'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage();\r\n  swRegister();\r\n});\r\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","RestoFavorite","getRestaurant","id","get","getAllRestaurant","getAll","deleteRestaurant","putRestaurant","resto","hasOwnProperty","put","API_ENDPOINT","HOME","DETAIL","TheRestoDbSource","fetch","response","json","responseJson","restaurants","KEY","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}